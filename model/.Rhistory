summarise(
mall_count = n(),  # 商場數量
brand_diversity = n_distinct(所屬集團),  # 集團多樣性
avg_year = mean(as.numeric(落成年份), na.rm = TRUE)  # 平均落成年份
)
# 1. 統一列名
colnames(schools)[which(colnames(schools) == "區域")] <- "region"
colnames(crime_rate)[which(colnames(crime_rate) == "區域")] <- "region"
colnames(mall_summary)[which(colnames(mall_summary) == "區域")] <- "region"
# 2. 將 housing_data 的 subregion.name 重命名為 region
housing_data <- housing_data %>%
rename(region = subregion.name)
# 3. 合併所有數據
housing_data <- housing_data %>%
left_join(schools, by = "region") %>%
left_join(crime_rate, by = "region") %>%
left_join(mall_summary, by = "region")
colnames()
colnames(housing_data)
colnames(schools)
colnames(crime_rate)
colnames(mall_summary)
# 1. 重命名列名以統一地區列為 region
colnames(schools)[which(colnames(schools) == "地區")] <- "region"
colnames(crime_rate)[which(colnames(crime_rate) == "district")] <- "region"
# 2. 合併所有數據
housing_data <- housing_data %>%
left_join(schools, by = "region") %>%
left_join(crime_rate, by = "region") %>%
left_join(mall_summary, by = "region")
# 3. 查看結果
str(housing_data)
head(housing_data)
# 1. 讀取數據
housing_data <- read.csv("housing_data.csv")
schools <- read.csv("school_summary.csv")
crime_rate <- read.csv("crime_rate_data.csv")
library(dplyr)
library(readxl)
# 1. 匹配文件名並提取地區
mall_files <- list.files(pattern = "mall_.*\\.csv")  # 匹配所有的 mall_ 開頭的 .csv 文件
# 2. 為每個文件添加地區信息
mall_data <- lapply(mall_files, function(file) {
# 讀取數據
data <- read.csv(file)
# 從文件名提取地區代碼
region <- gsub("mall_|\\.csv", "", file)  # 去掉文件名中的 "mall_" 和 ".csv"
# 添加地區列到數據框
data$region <- region
return(data)
}) %>% bind_rows()  # 合併所有數據框
# 2. 數據處理和合併
# 計算每個地區的商場相關指標
mall_summary <- mall_data %>%
group_by(region) %>%
summarise(
mall_count = n(),  # 商場數量
brand_diversity = n_distinct(所屬集團),  # 集團多樣性
avg_year = mean(as.numeric(落成年份), na.rm = TRUE)  # 平均落成年份
)
library(dplyr)
# 1. 重命名列名以統一地區列為 region
colnames(schools)[which(colnames(schools) == "地區")] <- "region"
colnames(crime_rate)[which(colnames(crime_rate) == "district")] <- "region"
# 2. 合併所有數據
housing_data <- housing_data %>%
left_join(schools, by = "region") %>%
left_join(crime_rate, by = "region") %>%
left_join(mall_summary, by = "region")
str(housing_data)
head(housing_data)
unique(housing_data$region)
unique(schools$region)
unique(crime_rate$region)
unique(mall_summary$region)
# 1. 讀取數據
housing_data <- read.csv("housing_data.csv")
schools <- read.csv("school_summary.csv")
crime_rate <- read.csv("crime_rate_data.csv")
library(dplyr)
library(readxl)
# 1. 匹配文件名並提取地區
mall_files <- list.files(pattern = "mall_.*\\.csv")  # 匹配所有的 mall_ 開頭的 .csv 文件
# 2. 為每個文件添加地區信息
mall_data <- lapply(mall_files, function(file) {
# 讀取數據
data <- read.csv(file)
# 從文件名提取地區代碼
region <- gsub("mall_|\\.csv", "", file)  # 去掉文件名中的 "mall_" 和 ".csv"
# 添加地區列到數據框
data$region <- region
return(data)
}) %>% bind_rows()  # 合併所有數據框
# 2. 數據處理和合併
# 計算每個地區的商場相關指標
mall_summary <- mall_data %>%
group_by(region) %>%
summarise(
mall_count = n(),  # 商場數量
brand_diversity = n_distinct(所屬集團),  # 集團多樣性
avg_year = mean(as.numeric(落成年份), na.rm = TRUE)  # 平均落成年份
)
library(dplyr)
# 1. 修正 housing_data 的 region 列
housing_data <- housing_data %>%
rename(region = subregion.name)
# 2. 統一地區名稱
housing_data$region <- recode(housing_data$region,
"元朗" = "元朗區",
"北區" = "北區",
"大埔" = "大埔區",
"屯門" = "屯門區",
"沙田" = "沙田區",
"荃灣" = "荃灣區",
"葵青" = "葵青區",
"西貢" = "西貢區",
"離島" = "離島區")
crime_rate$region <- recode(crime_rate$region,
"元朗" = "元朗區",
"北區" = "北區",
"屯門" = "屯門區",
"沙田" = "沙田區",
"荃灣" = "荃灣區",
"葵青" = "葵青區",
"西貢" = "西貢區",
"離島" = "離島區")
# 檢查 region 列是否存在
colnames(housing_data)  # 應包含 region
colnames(crime_rate)    # 應包含 region
colnames(mall_summary)  # 應包含 region
colnames(schools)       # 應包含 region
# 檢查 region 列是否為 NULL 或空值
any(is.null(housing_data$region))
any(is.null(crime_rate$region))
any(is.null(mall_summary$region))
any(is.null(schools$region))
# 1. 讀取數據
housing_data <- read.csv("housing_data.csv")
schools <- read.csv("school_summary.csv")
crime_rate <- read.csv("crime_rate_data.csv")
library(dplyr)
library(readxl)
# 1. 匹配文件名並提取地區
mall_files <- list.files(pattern = "mall_.*\\.csv")  # 匹配所有的 mall_ 開頭的 .csv 文件
# 2. 為每個文件添加地區信息
mall_data <- lapply(mall_files, function(file) {
# 讀取數據
data <- read.csv(file)
# 從文件名提取地區代碼
region <- gsub("mall_|\\.csv", "", file)  # 去掉文件名中的 "mall_" 和 ".csv"
# 添加地區列到數據框
data$region <- region
return(data)
}) %>% bind_rows()  # 合併所有數據框
# 2. 數據處理和合併
# 計算每個地區的商場相關指標
mall_summary <- mall_data %>%
group_by(region) %>%
summarise(
mall_count = n(),  # 商場數量
brand_diversity = n_distinct(所屬集團),  # 集團多樣性
avg_year = mean(as.numeric(落成年份), na.rm = TRUE)  # 平均落成年份
)
library(dplyr)
# 1. 統一列名
colnames(schools)[which(colnames(schools) == "地區")] <- "region"
colnames(crime_rate)[which(colnames(crime_rate) == "district")] <- "region"
# 2. 確保 region 列存在且有值
if (is.null(housing_data$region) | is.null(crime_rate$region) |
is.null(mall_summary$region) | is.null(schools$region)) {
stop("One or more data frames have NULL values in the region column.")
}
# 加載必要的庫
library(dplyr)
# 1. 加載數據
housing_data <- read.csv("housing_data.csv", stringsAsFactors = FALSE)
school_summary <- read.csv("school_summary.csv", stringsAsFactors = FALSE)
crime_rate_data <- read.csv("crime_rate_data.csv", stringsAsFactors = FALSE)
# 商場數據處理：將所有商場數據整合，計算每個地區的商場數量
mall_data_files <- c("mall_tw.csv", "mall_tp.csv", "mall_tm.csv", "mall_st.csv", "mall_sk.csv", "mall_kc.csv", "mall_island.csv")
mall_data <- lapply(mall_data_files, function(file) {
read.csv(file, stringsAsFactors = FALSE)
}) %>%
bind_rows()
mall_summary <- mall_data %>%
mutate(region = case_when(
grepl("荃灣", 地址) ~ "荃灣區",
grepl("大埔", 地址) ~ "大埔區",
grepl("屯門", 地址) ~ "屯門區",
grepl("沙田", 地址) ~ "沙田區",
grepl("元朗", 地址) ~ "元朗區",
grepl("北區", 地址) ~ "北區",
grepl("西貢", 地址) ~ "西貢區",
grepl("葵涌|青衣", 地址) ~ "葵青區",
grepl("離島|大嶼山|東涌", 地址) ~ "離島區",
TRUE ~ NA_character_
)) %>%
group_by(region) %>%
summarise(mall_count = n(), .groups = "drop")
# 2. 整合數據
# 統一地區名稱
housing_data <- housing_data %>%
rename(region = subregion.name)
# 整合所有數據到一個表
final_data <- housing_data %>%
left_join(school_summary, by = c("region" = "地區")) %>%
left_join(crime_rate_data, by = c("region" = "district")) %>%
left_join(mall_summary, by = "region") %>%
mutate(mall_count = replace_na(mall_count, 0))  # 若某地區無商場數據，填充為 0
# 3. 標準化計算
# 定義標準化函數
normalize <- function(x, reverse = FALSE) {
if (reverse) {
return((max(x, na.rm = TRUE) - x) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE)) * 100)
}
return((x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE)) * 100)
}
# 計算各指標的分數
final_data <- final_data %>%
mutate(
housing_score = (
normalize(as.numeric(gsub("[^0-9.]", "", `price.mean`)), reverse = TRUE) * 0.4 +
normalize(`net_area.mean`) * 0.4 +
normalize(`mtr_walking_time_seconds.mean`, reverse = TRUE) * 0.2
),
school_score = normalize(band1_ratio) * 0.7 + normalize(band2_ratio) * 0.3,
crime_score = normalize(crime_rate, reverse = TRUE),
mall_score = normalize(mall_count)
)
# 4. 計算總分
final_data <- final_data %>%
mutate(
total_score = housing_score * 0.4 +
school_score * 0.3 +
crime_score * 0.2 +
mall_score * 0.1
)
# 5. 查看結果
final_data <- final_data %>%
select(region, housing_score, school_score, crime_score, mall_score, total_score) %>%
arrange(desc(total_score))
print(final_data)
View(mall_summary)
# 加載必要的庫
library(dplyr)
# 1. 加載數據
housing_data <- read.csv("housing_data.csv", stringsAsFactors = FALSE)
school_summary <- read.csv("school_summary.csv", stringsAsFactors = FALSE)
crime_rate_data <- read.csv("crime_rate_data.csv", stringsAsFactors = FALSE)
# 定義商場數據文件列表與地區對應關係
mall_data_files <- list(
"mall_tw.csv" = "荃灣",
"mall_tp.csv" = "大埔",
"mall_tm.csv" = "屯門",
"mall_st.csv" = "沙田",
"mall_sk.csv" = "西貢",
"mall_kc.csv" = "葵青",
"mall_island.csv" = "離島",
"mall_yl.csv" = "元朗"
)
# 加載商場數據並添加 region 列
mall_data <- lapply(names(mall_data_files), function(file) {
read.csv(file, stringsAsFactors = FALSE) %>%
mutate(region = mall_data_files[[file]])
}) %>%
bind_rows()
# 計算每個地區的商場數量
mall_summary <- mall_data %>%
group_by(region) %>%
summarise(mall_count = n(), .groups = "drop")
# 2. 整合數據
# 統一學校數據的地區名稱
school_summary <- school_summary %>%
mutate(地區 = case_when(
地區 == "元朗區" ~ "元朗",
地區 == "北區" ~ "北區",
地區 == "大埔區" ~ "大埔",
地區 == "屯門區" ~ "屯門",
地區 == "沙田區" ~ "沙田",
地區 == "荃灣區" ~ "荃灣",
地區 == "葵青區" ~ "葵青",
地區 == "西貢區" ~ "西貢",
地區 == "離島區" ~ "離島",
TRUE ~ 地區
))
# 統一 housing_data 的地區名稱
housing_data <- housing_data %>%
rename(region = subregion.name)
# 整合所有數據
final_data <- housing_data %>%
left_join(school_summary, by = c("region" = "地區")) %>%
left_join(crime_rate_data, by = c("region" = "district")) %>%
left_join(mall_summary, by = "region") %>%
mutate(mall_count = replace_na(mall_count, 0))  # 填充缺失商場數據
# 3. 計算標準化分數與綜合評分
# 標準化函數
normalize <- function(x, reverse = FALSE) {
if (all(is.na(x))) return(rep(0, length(x)))  # 如果全是 NA，返回 0
x <- replace_na(x, 0)  # 替換 NA 為 0
if (reverse) {
return((max(x, na.rm = TRUE) - x) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE)) * 100)
}
return((x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE)) * 100)
}
# 計算各指標的分數
final_data <- final_data %>%
mutate(
housing_score = (
normalize(as.numeric(gsub("[^0-9.]", "", `price.mean`)), reverse = TRUE) * 0.4 +
normalize(`net_area.mean`) * 0.4 +
normalize(`mtr_walking_time_seconds.mean`, reverse = TRUE) * 0.2
),
school_score = normalize(band1_ratio) * 0.7 + normalize(band2_ratio) * 0.3,
crime_score = normalize(crime_rate, reverse = TRUE),
mall_score = normalize(mall_count)
) %>%
mutate(
total_score = housing_score * 0.4 +
school_score * 0.3 +
crime_score * 0.2 +
mall_score * 0.1
)
# 4. 輸出結果
final_data <- final_data %>%
select(region, housing_score, school_score, crime_score, mall_score, total_score) %>%
arrange(desc(total_score))
print(final_data)
# 加載必要的庫
library(dplyr)
# 1. 加載數據
housing_data <- read.csv("housing_data.csv", stringsAsFactors = FALSE)
school_summary <- read.csv("school_summary.csv", stringsAsFactors = FALSE)
crime_rate_data <- read.csv("crime_rate_data.csv", stringsAsFactors = FALSE)
# 定義商場數據文件列表與地區對應關係
mall_data_files <- list(
"mall_tw.csv" = "荃灣",
"mall_tp.csv" = "大埔",
"mall_tm.csv" = "屯門",
"mall_st.csv" = "沙田",
"mall_sk.csv" = "西貢",
"mall_kc.csv" = "葵青",
"mall_island.csv" = "離島",
"mall_yl.csv" = "元朗"
)
# 加載商場數據並添加 region 列
mall_data <- lapply(names(mall_data_files), function(file) {
read.csv(file, stringsAsFactors = FALSE) %>%
mutate(region = mall_data_files[[file]])
}) %>%
bind_rows()
# 計算每個地區的商場數量
mall_summary <- mall_data %>%
group_by(region) %>%
summarise(mall_count = n(), .groups = "drop")
# 2. 整合數據
# 統一學校數據的地區名稱
school_summary <- school_summary %>%
mutate(地區 = case_when(
地區 == "元朗區" ~ "元朗",
地區 == "北區" ~ "北區",
地區 == "大埔區" ~ "大埔",
地區 == "屯門區" ~ "屯門",
地區 == "沙田區" ~ "沙田",
地區 == "荃灣區" ~ "荃灣",
地區 == "葵青區" ~ "葵青",
地區 == "西貢區" ~ "西貢",
地區 == "離島區" ~ "離島",
TRUE ~ 地區
))
# 統一 housing_data 的地區名稱
housing_data <- housing_data %>%
rename(region = subregion.name)
# 整合所有數據
final_data <- housing_data %>%
left_join(school_summary, by = c("region" = "地區")) %>%
left_join(crime_rate_data, by = c("region" = "district")) %>%
left_join(mall_summary, by = "region") %>%
mutate(mall_count = replace_na(mall_count, 0))  # 填充缺失商場數據
# 3. 計算標準化分數與綜合評分
# 標準化函數
normalize <- function(x, reverse = FALSE) {
if (all(is.na(x))) return(rep(0, length(x)))  # 如果全是 NA，返回 0
x <- replace_na(x, 0)  # 替換 NA 為 0
if (reverse) {
return((max(x, na.rm = TRUE) - x) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE)) * 100)
}
return((x - min(x, na.rm = TRUE)) / (max(x, na.rm = TRUE) - min(x, na.rm = TRUE)) * 100)
}
# 計算各指標的分數
final_data <- final_data %>%
mutate(
housing_score = (
normalize(as.numeric(gsub("[^0-9.]", "", `price.mean`)), reverse = TRUE) * 0.4 +
normalize(`net_area.mean`) * 0.4 +
normalize(`mtr_walking_time_seconds.mean`, reverse = TRUE) * 0.2
),
school_score = normalize(band1_ratio) * 0.7 + normalize(band2_ratio) * 0.3,
crime_score = normalize(crime_rate, reverse = TRUE),
mall_score = normalize(mall_count)
) %>%
mutate(
total_score = housing_score * 0.4 +
school_score * 0.3 +
crime_score * 0.2 +
mall_score * 0.1
)
# 4. 輸出結果
final_data <- final_data %>%
select(region, housing_score, school_score, crime_score, mall_score, total_score) %>%
arrange(desc(total_score))
print(final_data)
# 加載必要的庫
library(dplyr)
library(ggplot2)
library(tidyr)
# 假設 `final_data` 已經包含計算好的數據
# 以下代碼基於您提供的數據結構進行可視化
# 1. 數據處理 - 長格式轉換，用於堆疊柱狀圖
long_data <- final_data %>%
select(region, housing_score, school_score, crime_score, mall_score) %>%
pivot_longer(cols = housing_score:mall_score, names_to = "score_type", values_to = "score")
# 2. 堆疊柱狀圖 - 各地區分數構成
ggplot(long_data, aes(x = reorder(region, -score), y = score, fill = score_type)) +
geom_bar(stat = "identity", position = "stack", width = 0.7) +
labs(title = "各地區分數權重分佈", x = "地區", y = "分數", fill = "分數類型") +
scale_fill_brewer(palette = "Set2") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# 3. 條形圖 - 各地區總分排名
ggplot(final_data, aes(x = reorder(region, -total_score), y = total_score, fill = region)) +
geom_bar(stat = "identity", width = 0.7) +
labs(title = "各地區總分排名", x = "地區", y = "總分") +
scale_fill_brewer(palette = "Paired") +
theme_minimal(base_size = 14) +
theme(axis.text.x = element_text(angle = 45, hjust = 1), legend.position = "none")
# 加載數據
culture_data <- read.csv("culture.csv")
# 將數據轉換為時間序列格式
library(tidyr)
culture_long <- culture_data %>%
pivot_longer(cols = starts_with("year"), names_to = "year", values_to = "usage") %>%
mutate(year = as.numeric(sub("year_", "", year)))
# 選擇一個地區進行分析（例如：沙田大會堂）
shatin_data <- culture_long %>% filter(地點 == "沙田大會堂")
# 構建時間序列模型
library(forecast)
shatin_ts <- ts(shatin_data$usage, start = min(shatin_data$year), end = max(shatin_data$year), frequency = 1)
shatin_model <- auto.arima(shatin_ts)
# 查看模型摘要
summary(shatin_model)
# 預測未來 5 年使用量
forecast(shatin_model, h = 5)
# 加載數據
culture_data <- read.csv("culture.csv")
# 將數據轉換為時間序列格式
library(tidyr)
culture_long <- culture_data %>%
pivot_longer(cols = starts_with("year"), names_to = "year", values_to = "usage") %>%
mutate(year = as.numeric(sub("year_", "", year)))
# 選擇一個地區進行分析（例如：沙田大會堂）
shatin_data <- culture_long %>% filter(地點 == "沙田大會堂")
# 構建時間序列模型
library(forecast)
shatin_ts <- ts(shatin_data$usage, start = min(shatin_data$year), end = max(shatin_data$year), frequency = 1)
shatin_model <- auto.arima(shatin_ts)
# 查看模型摘要
summary(shatin_model)
# 預測未來 5 年使用量
forecast(shatin_model, h = 5)
# 加載數據
culture_data <- read.csv("culture.csv")
# 將數據轉換為時間序列格式
library(tidyr)
culture_long <- culture_data %>%
pivot_longer(cols = starts_with("year"), names_to = "year", values_to = "usage") %>%
mutate(year = as.numeric(sub("year_", "", year)))
# 選擇一個地區進行分析（例如：沙田大會堂）
shatin_data <- culture_long %>% filter(地點 == "沙田大會堂")
# 構建時間序列模型
library(forecast)
shatin_ts <- ts(shatin_data$usage, start = min(shatin_data$year), end = max(shatin_data$year), frequency = 1)
shatin_model <- auto.arima(shatin_ts)
# 查看模型摘要
summary(shatin_model)
# 預測未來 5 年使用量
shatin_forecast <- forecast(shatin_model, h = 5)
# 繪製預測圖
library(ggplot2)
autoplot(shatin_forecast) +
labs(
title = "沙田大會堂未來 5 年使用量預測",
x = "年份",
y = "使用量"
) +
theme_minimal()
# 加載數據
culture_data <- read.csv("culture.csv")
# 將數據轉換為時間序列格式
library(tidyr)
culture_long <- culture_data %>%
pivot_longer(cols = starts_with("year"), names_to = "year", values_to = "usage") %>%
mutate(year = as.numeric(sub("year_", "", year)))
# 選擇一個地區進行分析（例如：沙田大會堂）
shatin_data <- culture_long %>% filter(地點 == "沙田大會堂")
# 構建時間序列模型
library(forecast)
shatin_ts <- ts(shatin_data$usage, start = min(shatin_data$year), end = max(shatin_data$year), frequency = 1)
shatin_model <- auto.arima(shatin_ts)
# 查看模型摘要
summary(shatin_model)
# 預測未來 5 年使用量
forecast(shatin_model, h = 5)
